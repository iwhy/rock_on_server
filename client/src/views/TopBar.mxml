<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="760" height="80" creationComplete="onCreationComplete()">
	<mx:Script>
		<![CDATA[
			import mx.containers.HBox;
			import controllers.LevelManager;
			import mx.controls.Label;
			import mx.core.UIComponent;
			import mx.core.Application;
			import controllers.UserManager;
			import controllers.ThingerManager;
			import controllers.CreatureManager;
			import controllers.StoreManager;
			import controllers.LayerableManager;
			import controllers.StructureManager;
			import mx.controls.Text;
			import models.User;
			import world.World;
			public var myWorld:World;
			[Bindable] public var myUser:User;
			
			[Bindable] public var creditsBox:Text;
			[Bindable] public var xpBox:Text;
			[Bindable] public var levelBox:Text;
			[Bindable] public var mainHBox:HBox;
			
			[Bindable] public var layerableManager:LayerableManager;
			[Bindable] public var structureManager:StructureManager;
			[Bindable] public var storeManager:StoreManager;
			[Bindable] public var creatureManager:CreatureManager;
			[Bindable] public var thingerManager:ThingerManager;
			[Bindable] public var userManager:UserManager;
			[Bindable] public var levelManager:LevelManager;
			
			[Bindable] public var myMemory:Number;
			[Bindable] public var fps:Number;
			[Bindable] public var aux:Number;	
			public var lastTime:Number;	
			
			public var worldView:WorldView;
			public var editView:EditView;		
					
			private function onCreationComplete():void
			{
				addEventListener(Event.ENTER_FRAME, onEnterFrame);			
			}
			
			private function onEnterFrame(evt:Event):void
			{
				var time:Number = getTimer();
				var deltaTime:Number = time - lastTime;
				var lockedDelta:Number = Math.min(100, deltaTime);
				fps = 1000/deltaTime;
				myMemory = System.totalMemory;
				lastTime = time;
			}
			
			public function onUserLoaded():void
			{
				setBarSkeleton();
				showCredits();
				showXp();	
				showLevel();			
			}
			
			public function setBarSkeleton():void
			{
				mainHBox = new HBox();
				mainHBox.width = (width - 60);
				mainHBox.height = 50;
				mainHBox.y = 20;
				mainHBox.x = 30;
				addChild(mainHBox);
			}
			
			public function showLevel():void
			{
				var backCanvas:Canvas = createBackCanvas();
				var grayCanvas:Canvas = createGrayCanvas();
				grayCanvas.x = 4;
				grayCanvas.y = 4;
				grayCanvas.height = 27;
				levelBox = new Text();
				levelBox.text = myUser.level.rank.toString();
				levelBox.x = 28;
				levelBox.y = 1;
				setFontStyle(levelBox, 18);
				grayCanvas.addChild(levelBox);
				backCanvas.addChild(grayCanvas);
				mainHBox.addChild(backCanvas);
			}
			
			public function showXp():void
			{
				var backCanvas:Canvas = createBackCanvas();
				var grayCanvas:Canvas = createGrayCanvas();
				grayCanvas.x = 4;
				grayCanvas.y = 4;
				grayCanvas.height = 27;
				xpBox = new Text();
				xpBox.text = myUser.xp.toString();
				xpBox.x = 28;
				xpBox.y = 1;
				setFontStyle(xpBox, 18);
				grayCanvas.addChild(xpBox);
				backCanvas.addChild(grayCanvas);
				mainHBox.addChild(backCanvas);				
			}
			
			public function createBackCanvas():Canvas
			{
				var backCanvas:Canvas = new Canvas();
				backCanvas.setStyle("backgroundColor", 0x000000);
				backCanvas.setStyle("cornerRadius", 14);
				backCanvas.setStyle("borderColor", 0x000000);
				backCanvas.setStyle("borderStyle", "solid");				
				return backCanvas;				
			}
			
			public function createGrayCanvas():Canvas
			{
				var grayCanvas:Canvas = new Canvas();
				grayCanvas.clipContent = false;				
				grayCanvas.setStyle("backgroundColor", 0x333333);
				grayCanvas.setStyle("cornerRadius", 10);
				grayCanvas.setStyle("borderColor", 0x000000);
				grayCanvas.setStyle("borderStyle", "solid");	
				return grayCanvas;			
			}
			
			public function setFontStyle(textBox:Text, fontSize:int):void
			{
				textBox.setStyle("paddingLeft", 6);
				textBox.setStyle("paddingRight", 6);
				textBox.setStyle("fontFamily", "Museo-Slab-900");
				textBox.setStyle("fontSize", fontSize);
				textBox.setStyle("color", 0xffffff);				
			}
			
			public function showCredits():void
			{
				var backCanvas:Canvas = createBackCanvas();
				var creditsCanvas:Canvas = createGrayCanvas();
				creditsCanvas.x = 4;
				creditsCanvas.y = 4;
				creditsCanvas.height = 27;
				creditsBox = new Text();
				creditsBox.id = 'myCredits';
				creditsBox.text = myUser.credits.toString();
				creditsBox.x = 28;
				creditsBox.y = 1;
				setFontStyle(creditsBox, 18);
				var coinIcon:CoinIcon = new CoinIcon();
				coinIcon.scaleX = 0.4;
				coinIcon.scaleY = 0.4;
				var uic:UIComponent = new UIComponent();
				uic.addChild(coinIcon);
				uic.x = 6;
				uic.y = 5;
				creditsCanvas.addChild(uic);
				creditsCanvas.addChild(creditsBox);
				backCanvas.addChild(creditsCanvas);
				mainHBox.addChild(backCanvas);
			}
			
			private function getFriendData():void
			{
				userManager.getFacebookFriendData();
			}	
			
			private function showCountdown():void
			{
				var counterContainer:Canvas = new Canvas();
				var hoursLabel:Label = new Label();
				
			}				
		]]>
	</mx:Script>
	<!--mx:Button x="60" click="showCustomizer()"/-->
	<mx:Canvas right="0" width="200">
		<mx:Label text="MEM: {this.myMemory}"/>
		<mx:Label y="20" text="FPS: {this.fps}"/>
	</mx:Canvas>		
</mx:Canvas>
