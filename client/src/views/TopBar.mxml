<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="760" height="80" creationComplete="onCreationComplete()">
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.containers.HBox;
			import controllers.LevelManager;
			import mx.controls.Label;
			import mx.core.UIComponent;
			import mx.core.Application;
			import controllers.UserManager;
			import controllers.ThingerManager;
			import controllers.CreatureManager;
			import controllers.StoreManager;
			import controllers.LayerableManager;
			import controllers.StructureManager;
			import mx.controls.Text;
			import models.User;
			import world.World;
			public var myWorld:World;
			[Bindable] public var myUser:User;
			
			[Bindable] public var creditsBox:Text;
			[Bindable] public var xpBox:Text;
			[Bindable] public var levelBox:Text;
			[Bindable] public var mainHBox:HBox;
			
			public var textFilter:GlowFilter;
			
			[Bindable] public var layerableManager:LayerableManager;
			[Bindable] public var structureManager:StructureManager;
			[Bindable] public var storeManager:StoreManager;
			[Bindable] public var creatureManager:CreatureManager;
			[Bindable] public var thingerManager:ThingerManager;
			[Bindable] public var userManager:UserManager;
			[Bindable] public var levelManager:LevelManager;
			
			[Bindable] public var myMemory:Number;
			[Bindable] public var fps:Number;
			[Bindable] public var aux:Number;	
			public var lastTime:Number;	
			
			public var worldView:WorldView;
			public var editView:EditView;
			
			[Embed(source="../libs/icons/guitar.png")]
			public var guitarIconClass:Class;					
			[Embed(source="../libs/icons/headphones.png")]
			public var headphonesIconClass:Class;					
					
			private function onCreationComplete():void
			{
				addEventListener(Event.ENTER_FRAME, onEnterFrame);	
				clipContent = false;		
			}
			
			private function onEnterFrame(evt:Event):void
			{
				var time:Number = getTimer();
				var deltaTime:Number = time - lastTime;
				var lockedDelta:Number = Math.min(100, deltaTime);
				fps = 1000/deltaTime;
				myMemory = System.totalMemory;
				lastTime = time;
			}
			
			public function onUserLoaded():void
			{
				setBarSkeleton();
				showCredits();
				showPremiumCredits();	
				showLevel();			
			}
			
			public function setBarSkeleton():void
			{
				mainHBox = new HBox();
				mainHBox.width = (width - 60);
				mainHBox.height = 80;
				mainHBox.y = 20;
				mainHBox.x = 30;
				mainHBox.clipContent = false;
				mainHBox.setStyle("horizontalGap", 15);
				addChild(mainHBox);
			}
			
			public function showLevel():void
			{
				var textFilter:GlowFilter = createGrayFilter();	
				var canvas:Canvas = new Canvas();			
//				var levelBox:Canvas = UserInfoRenderer.createLevelBox(myUser, 32, 29, 0, 0, 16, [textFilter]);
				var levelText:Label = UserInfoRenderer.getLevelText(myUser, levelManager, 26, [textFilter]);
				levelText.y = -3;
				levelText.x = -8;
				canvas.clipContent = false;
				var progressBar:Canvas = UserInfoRenderer.createLevelProgressBar(myUser, levelManager, 130, 24, 0xE2FFB0, 0x038700, 0x1ea55e);
				progressBar.y = -2;
				progressBar.x = 28;
				var xpText:Label = getXpText(13);
				xpText.x = 28;
				xpText.y = 31;
				canvas.addChild(xpText);
				canvas.addChild(progressBar);
				canvas.addChild(levelText); 
				mainHBox.addChild(canvas);
			}
			
			public function getXpText(fontSize:int):Text
			{
				var textFilter:GlowFilter = createGrayFilter();				
				xpBox = new Text();
				xpBox.text = myUser.xp.toString() + "/" + levelManager.getNextXpThreshold(myUser).toString();
				xpBox.setStyle("color", 0xffffff);
				xpBox.setStyle("fontSize", fontSize);
				xpBox.setStyle("fontFamily", "Museo-Slab-900");
				xpBox.x = 27;
				xpBox.y = 3;
				xpBox.filters = [textFilter];
				return xpBox;				
			}
			
			public function showPremiumCredits():void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				creditsBox = new Text();
				creditsBox.text = myUser.premium_credits.toString();
				creditsBox.setStyle("color", 0xd3ffa4);
				creditsBox.x = 27;
				creditsBox.y = 3;
				creditsBox.filters = [textFilter];
				var icon:Image = new Image();
				icon.source = guitarIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				setFontStyle(creditsBox, 16);
				canvas.addChild(creditsBox);
				mainHBox.addChild(canvas);					
			}
			
			public function showXp():void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				xpBox = new Text();
				xpBox.text = myUser.xp.toString();
				xpBox.setStyle("color", 0xd3ffa4);
				xpBox.x = 27;
				xpBox.y = 3;
				xpBox.filters = [textFilter];
				var icon:Image = new Image();
				icon.source = guitarIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				setFontStyle(xpBox, 16);
				canvas.addChild(xpBox);
				mainHBox.addChild(canvas);				
			}
			
			public function createGreenCanvas():Canvas
			{
				var canvas:Canvas = genericCanvasStyles();
//				canvas.setStyle("backgroundColor", 0x92e43b);
//				canvas.setStyle("borderColor", 0x003824);
				return canvas;
			}
			
			public function createBlueCanvas():Canvas
			{
				var canvas:Canvas = genericCanvasStyles();
//				canvas.setStyle("backgroundColor", 0x33bff3);
//				canvas.setStyle("borderColor", 0x00164A);
				return canvas;				
			}
			
			public function genericCanvasStyles():Canvas
			{
				var canvas:Canvas = new Canvas();
//				canvas.setStyle("cornerRadius", 8);
//				canvas.setStyle("borderStyle", "solid");
//				canvas.setStyle("borderThickness", 1);				
				canvas.clipContent = false; 
				return canvas;				
			}
			
			public function createGrayFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0x333333, 1, 1.4, 1.4, 30, 4); 
				return filter;
			}

			public function createGreenFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0x1ea55e, 1, 1.4, 1.4, 30, 4); 
				return filter;
			}
			
			public function createBlueFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0x0052EB, 1, 1.3, 1.3, 30, 4); 
				return filter;				
			}
			
			public function createBackCanvas():Canvas
			{
				var backCanvas:Canvas = new Canvas();
				backCanvas.setStyle("backgroundColor", 0x000000);
				backCanvas.setStyle("cornerRadius", 14);
				backCanvas.setStyle("borderColor", 0x000000);
				backCanvas.setStyle("borderStyle", "solid");				
				return backCanvas;				
			}
			
			public function createGrayCanvas():Canvas
			{
				var grayCanvas:Canvas = new Canvas();
				grayCanvas.clipContent = false;				
//				grayCanvas.setStyle("backgroundColor", 0x333333);
//				grayCanvas.setStyle("cornerRadius", 10);
//				grayCanvas.setStyle("borderColor", 0x000000);
//				grayCanvas.setStyle("borderStyle", "solid");	
				return grayCanvas;			
			}
			
			public function setFontStyle(textBox:Text, fontSize:int):void
			{
				textBox.setStyle("paddingLeft", 6);
				textBox.setStyle("paddingRight", 6);
				textBox.setStyle("fontFamily", "Museo-Slab-900");
				textBox.setStyle("fontSize", fontSize);
				textBox.setStyle("color", 0xffffff);				
			}
			
			public function showCredits():void
			{
				var canvas:Canvas = createBlueCanvas();
				var textFilter:GlowFilter = createGrayFilter();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				creditsBox = new Text();
				creditsBox.id = 'myCredits';
				creditsBox.filters = [textFilter];
				creditsBox.text = myUser.credits.toString();
				creditsBox.x = 35;
				creditsBox.y = 3;
				setFontStyle(creditsBox, 16);
//				var coinIcon:CoinIcon = new CoinIcon();
//				coinIcon.scaleX = 0.4;
//				coinIcon.scaleY = 0.4;
//				var uic:UIComponent = new UIComponent();
//				uic.addChild(coinIcon);
//				uic.x = 6;
//				uic.y = 5;
//				canvas.addChild(uic);
				var icon:Image = new Image();
				icon.source = headphonesIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				canvas.addChild(creditsBox);
//				backCanvas.addChild(creditsCanvas);
				mainHBox.addChild(canvas);
			}
			
			private function getFriendData():void
			{
				userManager.getFacebookFriendData();
			}	
			
			private function showCountdown():void
			{
				var counterContainer:Canvas = new Canvas();
				var hoursLabel:Label = new Label();
				
			}				
		]]>
	</mx:Script>
	<!--mx:Button x="60" click="showCustomizer()"/-->
	<mx:Canvas right="0" width="200">
		<mx:Label text="MEM: {this.myMemory}"/>
		<mx:Label y="20" text="FPS: {this.fps}"/>
	</mx:Canvas>		
</mx:Canvas>
