<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="760" height="80" creationComplete="onCreationComplete()">
	<mx:Style source="application.css">
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import controllers.CreatureController;
			import controllers.LayerableController;
			import controllers.LevelController;
			import controllers.SongController;
			import controllers.StoreController;
			import controllers.StructureController;
			import controllers.ThingerController;
			import controllers.UserController;
			
			import models.User;
			
			import music.MusicPlayer;
			
			import mx.containers.HBox;
			import mx.containers.VBox;
			import mx.controls.Button;
			import mx.controls.Image;
			import mx.controls.Label;
			import mx.controls.Text;
			import mx.core.Application;
			import mx.core.UIComponent;
			
			import user.GameUser;
			
			import world.World;
			public var myWorld:World;
			[Bindable] public var myUser:User;
			
			[Bindable] public var creditsBox:Text;
			[Bindable] public var musicCreditsBox:Text;
			[Bindable] public var fanHeartsBox:Text;
			[Bindable] public var xpBox:Text;
			[Bindable] public var levelBox:Text;
			[Bindable] public var bandNameBox:Text;
			[Bindable] public var mainHBox:HBox;
			[Bindable] public var capacityBox:Text;
			[Bindable] public var musicPlayer:MusicPlayer;
			
			public var textFilter:GlowFilter;
			public var startShowButton:Button;
			public var startEncoreButton:Button;
			
			[Bindable] public var layerableController:LayerableController;
			[Bindable] public var structureController:StructureController;
			[Bindable] public var storeController:StoreController;
			[Bindable] public var creatureController:CreatureController;
			[Bindable] public var thingerController:ThingerController;
			[Bindable] public var userController:UserController;
			[Bindable] public var levelController:LevelController;
			[Bindable] public var songController:SongController;
			
			[Bindable] public var myMemory:Number;
			[Bindable] public var fps:Number;
			[Bindable] public var aux:Number;	
			public var lastTime:Number;	
			
			public var worldView:WorldView;
			public var editView:EditView;
			
			[Embed(source="../libs/icons/guitar.png")]
			public var guitarIconClass:Class;					
			[Embed(source="../libs/icons/heart.png")]
			public var heartIconClass:Class;					
			[Embed(source="../libs/icons/headphones.png")]
			public var headphonesIconClass:Class;	
			[Embed(source="../libs/Museo_Slab_900.otf",
                    fontFamily="Museo_Slab_900",
                    mimeType="application/x-font",
                    embedAsCFF="true")]
			public const Museo_Slab_900_Font:Class;
			
					
			private function onCreationComplete():void
			{
				addEventListener(Event.ENTER_FRAME, onEnterFrame);	
				clipContent = false;
//				addBackCanvas();
			}
			
			private function createTransparentFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0xffffff, 0.5, 4, 4, 30, 50);
				return filter;
			}
			
			private function addBackCanvas():void
			{
				var c:Canvas = new Canvas();
				c.setStyle("backgroundColor", 0xffffff);
				c.alpha = 0.6;
				c.setStyle("cornerRadius", 14);
				c.setStyle("borderStyle", "solid");
				c.setStyle("borderColor", 0xffffff);
				c.height = 90;
				c.y = -10;
				c.width = 740;
				c.x = 10;
				addChild(c);
			}
			
			private function onEnterFrame(evt:Event):void
			{
				var time:Number = getTimer();
				var deltaTime:Number = time - lastTime;
				var lockedDelta:Number = Math.min(100, deltaTime);
				fps = 1000/deltaTime;
				myMemory = System.totalMemory;
				lastTime = time;
			}
			
			public function onUserObjectLoaded():void
			{
				setBarSkeleton();
				showCredits();
//				showPremiumCredits();	
				showMusicCredits();
				showFanHearts();
				showLevel();
			}
			
			public function onVenueLoaded():void
			{
				var vbox:VBox = createBandInfoVBox();
				showBandInfo(vbox);		
				showVenueInfo(vbox);
				addShowButtons(vbox);
				addChild(vbox);
			}
			
			public function onSongsLoaded():void
			{
				showMusicInfo();
			}
			
			public function updateTopbarInfo(u:User):void
			{
				creditsBox.text = u.credits.toString();
				musicCreditsBox.text = u.music_credits.toString();
			}
			
			public function showMusicInfo():void
			{
				musicPlayer = new MusicPlayer(songController);
				addChild(musicPlayer);
			}
			
			public function createBandInfoVBox():VBox
			{
				var vbox:VBox = new VBox();
				vbox.right = 0;
				vbox.setStyle("verticalGap", 4);
				vbox.clipContent = false;
				vbox.setStyle("horizontalAlign", "right");
				vbox.y = 19;
				return vbox;
			}
						
			public function setBarSkeleton():void
			{
				mainHBox = new HBox();
				mainHBox.width = (width - 60);
				mainHBox.height = 80;
				mainHBox.y = 20;
				mainHBox.x = 30;
				mainHBox.clipContent = false;
				mainHBox.setStyle("horizontalGap", 15);
				addChild(mainHBox);
			}
			
			public function showLevel():void
			{
				var textFilter:GlowFilter = createGrayFilter();	
				var canvas:Canvas = new Canvas();			
//				var levelBox:Canvas = UserInfoRenderer.createLevelBox(myUser, 32, 29, 0, 0, 16, [textFilter]);
				var levelText:Label = UserInfoRenderer.getLevelText(myUser, levelController, 26, [textFilter]);
				levelText.y = -3;
				levelText.x = -8;
				canvas.clipContent = false;
				var progressBar:Canvas = UserInfoRenderer.createLevelProgressBar(myUser, levelController, 130, 24, 0xE2FFB0, 0x038700, 0x1ea55e);
				progressBar.y = -2;
				progressBar.x = 28;
				var xpText:Label = getXpText(13);
				xpText.x = 28;
				xpText.y = 31;
				canvas.addChild(xpText);
				canvas.addChild(progressBar);
				canvas.addChild(levelText); 
				mainHBox.addChild(canvas);
			}
			
			public function getXpText(fontSize:int):Text
			{
				var textFilter:GlowFilter = createGrayFilter();				
				xpBox = new Text();
				xpBox.text = myUser.xp.toString() + "/" + levelController.getNextXpThreshold(myUser).toString();
				xpBox.setStyle("color", 0xffffff);
				xpBox.setStyle("fontSize", fontSize);
				xpBox.setStyle("fontFamily", "Museo_Slab_900");
				xpBox.x = 27;
				xpBox.y = 3;
				xpBox.filters = [textFilter];
				return xpBox;				
			}
			
			public function showPremiumCredits():void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var backFilter:GlowFilter = createTransparentFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				creditsBox = new Text();
				creditsBox.text = myUser.premium_credits.toString();
				creditsBox.setStyle("color", 0xd3ffa4);
				creditsBox.x = 27;
				creditsBox.y = 3;
				creditsBox.filters = [textFilter, backFilter];
				var icon:Image = new Image();
				icon.filters = [backFilter];
				icon.source = guitarIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				setFontStyle(creditsBox, 16);
				canvas.addChild(creditsBox);
				mainHBox.addChild(canvas);					
			}
			
			public function showBandInfo(vbox:VBox):void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				var editButton:Button = new Button();
				editButton.width = 26;
				editButton.height = 26;
				editButton.right = 0;
				canvas.right = 0;
				bandNameBox = new Text();
				bandNameBox.right = 30;
				bandNameBox.text = worldView.creatureController.getCreatureGroupByOwnedDwellingId(worldView.venueManager.venue.id).name;
				bandNameBox.setStyle("color", 0xd3ffa4);
				bandNameBox.x = 0;
				bandNameBox.y = 3;
				bandNameBox.filters = [textFilter];				
				setFontStyle(bandNameBox, 18);
				canvas.addChild(bandNameBox);
				canvas.addChild(editButton);
				vbox.addChild(canvas);
			}
			
			public function showVenueInfo(vbox:VBox):void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.right = 0;
//				canvas.y = 53;
				var capacityHBox:HBox = new HBox();
				var capacityLabel:Text = new Text();
				capacityHBox.setStyle("horizontalGap", 0);
				capacityLabel.text = "Fan Capacity:";
				capacityLabel.filters = [textFilter];
				capacityLabel.setStyle("color", 0xd3ffa4);
				setFontStyle(capacityLabel, 14);
				capacityHBox.addChild(capacityLabel);
				capacityBox = new Text();
				capacityBox.text = this.worldView.venueManager.venue.fancount.toString() + "/" + this.worldView.venueManager.venue.dwelling.capacity.toString();
				capacityBox.filters = [textFilter];
				capacityBox.x = 3;
				capacityBox.setStyle("fontFamily", "Museo_Slab_900");
				capacityBox.setStyle("fontSize", 14);
				capacityBox.setStyle("color", 0xffffff);					
				capacityHBox.addChild(capacityBox);
				canvas.addChild(capacityHBox);
				vbox.addChild(canvas);
			}
			
			public function addShowButtons(vbox:VBox):void
			{
				var canvas:Canvas = createGreenCanvas();
				startEncoreButton = new Button();
				startEncoreButton.width = 36;
				startEncoreButton.height = 36;
				startEncoreButton.right = 0;
				startEncoreButton.y = 3;
				startShowButton = new Button();
				startShowButton.width = 36;
				startShowButton.height = 36;
				startShowButton.right = 42;
				startShowButton.y = 3;
				canvas.addChild(startShowButton);				
				canvas.addChild(startEncoreButton);		
				vbox.addChild(canvas);
			}
			
			public function enableStartShowButton():Button
			{
				return startShowButton;
			}

			public function showMusicCredits():void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.y = 4;
				canvas.height = 27;
				musicCreditsBox = new Text();
				musicCreditsBox.text = myUser.music_credits.toString();
				musicCreditsBox.setStyle("color", 0xd3ffa4);
				musicCreditsBox.x = 35;
				musicCreditsBox.y = 3;
				musicCreditsBox.filters = [textFilter];
				var icon:Image = new Image();
				icon.source = headphonesIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				setFontStyle(musicCreditsBox, 16);
				canvas.addChild(musicCreditsBox);
				mainHBox.addChild(canvas);					
			}

			public function showFanHearts():void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				fanHeartsBox = new Text();
				fanHeartsBox.text = myUser.fan_hearts.toString();
				fanHeartsBox.setStyle("color", 0xd3ffa4);
				fanHeartsBox.x = 35;
				fanHeartsBox.y = 3;
				fanHeartsBox.filters = [textFilter];
				var icon:Image = new Image();
				icon.source = heartIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				setFontStyle(fanHeartsBox, 16);
				canvas.addChild(fanHeartsBox);
				mainHBox.addChild(canvas);					
			}
			
			public function showXp():void
			{
				var textFilter:GlowFilter = createGrayFilter();
				var canvas:Canvas = createGreenCanvas();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				xpBox = new Text();
				xpBox.text = myUser.xp.toString();
				xpBox.setStyle("color", 0xd3ffa4);
				xpBox.x = 27;
				xpBox.y = 3;
				xpBox.filters = [textFilter];
				var icon:Image = new Image();
				icon.source = guitarIconClass;
				icon.x = -9;
				icon.y = -12;
				canvas.addChild(icon);
				setFontStyle(xpBox, 16);
				canvas.addChild(xpBox);
				mainHBox.addChild(canvas);				
			}
			
			public function createGreenCanvas():Canvas
			{
				var canvas:Canvas = genericCanvasStyles();
//				canvas.setStyle("backgroundColor", 0x92e43b);
//				canvas.setStyle("borderColor", 0x003824);
				return canvas;
			}
			
			public function createBlueCanvas():Canvas
			{
				var canvas:Canvas = genericCanvasStyles();
//				canvas.setStyle("backgroundColor", 0x33bff3);
//				canvas.setStyle("borderColor", 0x00164A);
				return canvas;				
			}
			
			public function genericCanvasStyles():Canvas
			{
				var canvas:Canvas = new Canvas();			
				canvas.clipContent = false; 
				return canvas;				
			}
			
			public function createGrayFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0x333333, 1, 1.4, 1.4, 30, 4); 
				return filter;
			}

			public function createGreenFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0x1ea55e, 1, 1.4, 1.4, 30, 4); 
				return filter;
			}
			
			public function createBlueFilter():GlowFilter
			{
				var filter:GlowFilter = new GlowFilter(0x0052EB, 1, 1.3, 1.3, 30, 4); 
				return filter;				
			}
			
			public function createBackCanvas():Canvas
			{
				var backCanvas:Canvas = new Canvas();
				backCanvas.setStyle("backgroundColor", 0x000000);
				backCanvas.setStyle("cornerRadius", 14);
				backCanvas.setStyle("borderColor", 0x000000);
				backCanvas.setStyle("borderStyle", "solid");				
				return backCanvas;				
			}
			
			public function createGrayCanvas():Canvas
			{
				var grayCanvas:Canvas = new Canvas();
				grayCanvas.clipContent = false;					
				return grayCanvas;			
			}
			
			public function setFontStyle(textBox:Text, fontSize:int):void
			{
				textBox.setStyle("paddingLeft", 6);
				textBox.setStyle("paddingRight", 6);
				textBox.setStyle("fontFamily", "Museo_Slab_900");
				textBox.setStyle("fontSize", fontSize);
				textBox.setStyle("color", 0xffffff);				
			}
			
			public function showCredits():void
			{
				var canvas:Canvas = createBlueCanvas();
				var textFilter:GlowFilter = createGrayFilter();
				canvas.x = 4;
				canvas.y = 4;
				canvas.height = 27;
				creditsBox = new Text();
				creditsBox.id = 'myCredits';
				creditsBox.filters = [textFilter];
				creditsBox.text = myUser.credits.toString();
				creditsBox.x = 33;
				creditsBox.y = 3;
				setFontStyle(creditsBox, 16);
				var icon:Image = new Image();
				icon.source = new CoinsLeftover();
//				icon.x = -9;
//				icon.y = -12;
				icon.x = 10;
				icon.y = 32;
				canvas.addChild(icon);
				canvas.addChild(creditsBox);
//				backCanvas.addChild(creditsCanvas);
				mainHBox.addChild(canvas);
			}
			
			private function getFriendData():void
			{
				userController.getFacebookFriendData();
			}	
			
			private function showCountdown():void
			{
				var counterContainer:Canvas = new Canvas();
				var hoursLabel:Label = new Label();
				
			}				
		]]>
	</mx:Script>
	<!--mx:Button x="60" click="showCustomizer()"/-->
	<mx:Canvas left="10" y="300" width="200">
		<mx:Label text="MEM: {this.myMemory}"/>
		<mx:Label y="20" text="FPS: {this.fps}"/>
	</mx:Canvas>		
</mx:Canvas>
