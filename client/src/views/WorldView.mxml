<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="760" height="610" creationComplete="onCreationComplete()">
	<mx:Script>
		<![CDATA[
			import rock_on.BoothManager;
			import helpers.CreatureGenerator;
			import rock_on.GroupieManager;
			import controllers.DwellingManager;
			import rock_on.ListeningStationManager;
			import rock_on.PasserbyManager;
			import game.GameClock;
			import rock_on.ListeningStation;
			import rock_on.Promoter;
			import rock_on.PromoterManager;
			import world.WorldEvent;
			import mx.controls.Alert;
			import controllers.UserManager;
			import mx.core.Application;
			import rock_on.BandMemberManager;
			import rock_on.BandMember;
			import mx.events.FlexEvent;
			import user.UserEvent;
			import mx.controls.Text;
			import rock_on.ConcertStage;
			import rock_on.CustomerPersonManager;
			import rock_on.Booth;
			import rock_on.CustomerPerson;
			import rock_on.Person;
			import mx.events.DynamicEvent;
			import controllers.ThingerManager;
			import stores.StoreEvent;
			import models.OwnedLayerable;
			import models.User;
			import models.Structure;
			import controllers.StructureManager;
			import controllers.CreatureManager;
			import models.OwnedStructure;
			import controllers.StoreManager;
			import mx.core.UIComponent;
			import models.StoreOwnedThinger;
			import models.Store;
			import models.OwnedThinger;
			import models.Thinger;
			import world.AssetStack;
			import models.Creature;
			import mx.collections.ArrayCollection;
			import controllers.LayerableManager;
			import world.Point3D;
			import world.ActiveAsset;
			import world.World;
			import flash.utils.getTimer;	

			public var myWorld:World;
			[Bindable] public var myUser:User;
			
			public var inventoryCanvas:Canvas;
			public var inventoryIndex:int = 0;
			public var editMode:EditMode;
			public var editModeActivated:Boolean = false;
			public var booths:ArrayCollection;
			public var stages:ArrayCollection;
			public var customerPersonManager:CustomerPersonManager;
			public var bandManager:BandManager;
			public var concertStage:ConcertStage;
			public var listeningStationManager:ListeningStationManager;
			public var groupieManager:GroupieManager;
			public var venueManager:VenueManager;
			public var boothManager:BoothManager;
			public var creatureGenerator:CreatureGenerator;
			public var creditsBox:Text;
			
			[Bindable] public var layerableManager:LayerableManager;
			[Bindable] public var structureManager:StructureManager;
			[Bindable] public var storeManager:StoreManager;
			[Bindable] public var creatureManager:CreatureManager;
			[Bindable] public var thingerManager:ThingerManager;
			[Bindable] public var userManager:UserManager;
			[Bindable] public var dwellingManager:DwellingManager;
			
			[Bindable] public var myMemory:Number;
			[Bindable] public var fps:Number;
			[Bindable] public var aux:Number;	
			public var lastTime:Number;	
					
			private function onCreationComplete():void
			{
				addEventListener(Event.ENTER_FRAME, onEnterFrame);
				myWorld = new World(800, 800, 40);				
				addChild(myWorld);	
				
				myWorld.addEventListener(UserEvent.THINGER_PURCHASED, onWorldThingerPurchased);
								
				customerPersonManager = new CustomerPersonManager();
				customerPersonManager.myWorld = myWorld;
												
				var evt:DynamicEvent = new DynamicEvent("worldAdded", true, true);
				dispatchEvent(evt);
			}
			
			public function setInMotion():void
			{	
				showBooths();		
				addStage();

				creatureGenerator = new CreatureGenerator(layerableManager, boothManager, concertStage);

				showGroupies();
				showBandMembers();
				showListeningStations();	
				showVenue();			
			}
			
			private function showVenue():void
			{
				venueManager = new VenueManager(creatureGenerator, customerPersonManager, dwellingManager, booths, concertStage, myWorld);	
				venueManager.setInMotion();
			}
			
			private function showListeningStations():void
			{
				listeningStationManager = new ListeningStationManager(structureManager, myWorld);
				listeningStationManager.setInMotion();				
			}
			
			private function onEnterFrame(evt:Event):void
			{
				var time:Number = getTimer();
				var deltaTime:Number = time - lastTime;
				var lockedDelta:Number = Math.min(100, deltaTime);
				fps = 1000/deltaTime;
				myMemory = System.totalMemory;
				lastTime = time;
				customerPersonManager.update(lockedDelta);
				
				if (bandManager)
				{	
					bandManager.update(lockedDelta);
				}
			}
			
			public function onUserLoaded():void
			{
//				myUser.addEventListener(StoreEvent.THINGER_PURCHASED, onThingerPurchased);		
//				showUserData();				
			}
			
			private function onStructurePlaced(evt:DynamicEvent):void
			{
				thingerManager.saveStructurePlacement(evt.asset, evt.currentPoint);
			}
			
			private function onWorldClicked(evt:MouseEvent):void
			{
				if (evt.target is BandMember)
				{
					showCustomizer((evt.target as ActiveAsset).thinger as Creature);
				}
				else if (evt.target is CustomerPerson)
				{
					if (((evt.target as ActiveAsset).thinger as Creature).type == "Groupie")
					{
						Alert.show("I'm a Groupie!");
					}
					else 
					{
						Alert.show("Not a Groupie!");
					}
				}
			}
			
			private function onWorldThingerPurchased(evt:UserEvent):void
			{
//				creditsBox.text = myUser.credits.toString();
			}
			
			public function showBooths():void
			{
				boothManager = new BoothManager(structureManager, myWorld);
				boothManager.setInMotion();
			}
			
			public function addStage():void
			{
				stages = new ArrayCollection();
				var stageStructures:ArrayCollection = structureManager.getStructuresByType("ConcertStage");
				concertStage = new ConcertStage(stageStructures[0]);
				
				var asset:ActiveAsset = new ActiveAsset(new MovieClip());
				asset.thinger = stageStructures[0];
				var addTo:Point3D = new Point3D(concertStage.x, concertStage.y, concertStage.z);
				concertStage.worldCoords = addTo;
				myWorld.addAsset(asset, addTo);
			}
			
			public function showStore():void
			{
				var store:Store = storeManager.getStoreByName("Booth Store");
				var uic:UIComponent = storeManager.getStoreUIComponent(store);
				uic.width = 500;
				uic.height = 400;
				uic.x = this.width - uic.width/2;
				uic.y = this.height - uic.height/2;
				parentApplication.addChild(uic);
			}
			
			public function showGroupies():void
			{	
				groupieManager = new GroupieManager(customerPersonManager, boothManager, concertStage, creatureManager, myWorld);
				groupieManager.setInMotion();
			}
			
			public function showBandMembers():void
			{
				bandManager = new BandManager(creatureManager, booths, concertStage, myWorld);
				bandManager.setInMotion();
			}
			
			public function showCustomizer(creature:Creature):void
			{
				parentApplication.onCreatureToCustomize(creature);
			}
			
			private function onThingerPurchased(evt:StoreEvent):void
			{

			}
			
		]]>
	</mx:Script>	
</mx:Canvas>
